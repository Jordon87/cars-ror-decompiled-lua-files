UIContainer = {
  QueryComponentType = function(_ARG_0_)
    return "UIContainer"
  end,
  New = function(_ARG_0_)
    setmetatable({
      contents = {},
      numContents = 0,
      hasCachedCentroid = 0,
      CachedCentroid = {x = 0, y = 0},
      CachedDimensions = {w = 0, h = 0}
    }, {__index = UIContainer})
    return {
      contents = {},
      numContents = 0,
      hasCachedCentroid = 0,
      CachedCentroid = {x = 0, y = 0},
      CachedDimensions = {w = 0, h = 0}
    }
  end,
  GetCentroid = function(_ARG_0_)
    if _ARG_0_.hasCachedCentroid == 0 then
      for _FORV_9_ = 1, _ARG_0_.numContents do
        if type(_ARG_0_.contents[_FORV_9_]) == "table" and _ARG_0_.contents[_FORV_9_].name ~= nil then
        end
      end
      _ARG_0_.CachedDimensions.w = {
        x = -9999,
        y = -9999,
        x = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.x,
        y = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.y
      }.x - {
        x = 9999,
        y = 9999,
        x = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.x,
        y = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.y
      }.x
      _ARG_0_.CachedDimensions.h = {
        x = -9999,
        y = -9999,
        x = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.x,
        y = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.y
      }.y - {
        x = 9999,
        y = 9999,
        x = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.x,
        y = {
          x = 0,
          y = 0,
          y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
        }.y
      }.y
      if 0 + 1 == 0 then
        return 0, 0
      end
      _ARG_0_.CachedCentroid.x = (0 + {
        x = 0,
        y = 0,
        y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
      }.x) / (0 + 1)
      _ARG_0_.CachedCentroid.y = (0 + {
        x = 0,
        y = 0,
        y = GetComponentAnimationPosition(_ARG_0_.contents[_FORV_9_].owner, _ARG_0_.contents[_FORV_9_].name)
      }.y) / (0 + 1)
      _ARG_0_.hasCachedCentroid = 1
    end
    return _ARG_0_.CachedCentroid.x, _ARG_0_.CachedCentroid.y
  end,
  GetEdge = function(_ARG_0_, _ARG_1_)
    if _ARG_1_ == 0 then
    elseif _ARG_1_ == 1 then
    elseif _ARG_1_ == 2 then
    end
    return _ARG_0_:GetCentroid() - _ARG_0_.CachedDimensions.w + _ARG_0_.CachedDimensions.w, _ARG_0_:GetCentroid()
  end,
  Insert = function(_ARG_0_, _ARG_1_)
    _ARG_0_.numContents = _ARG_0_.numContents + 1
    table.insert(_ARG_0_.contents, _ARG_0_.numContents, _ARG_1_)
  end,
  MoveTo = function(_ARG_0_, _ARG_1_, _ARG_2_, _ARG_3_)
    _ARG_2_ = _ARG_2_ or 1
    _ARG_3_ = _ARG_3_ or {x = 0, y = 0}
    if _ARG_1_ ~= nil and type(_ARG_1_) == "table" then
      if _ARG_1_.GetEdge ~= nil then
      elseif _ARG_1_.GetCentroid ~= nil then
      else
      end
      _ARG_0_:Move(GetComponentValue(_ARG_1_.instance, "x") + _ARG_3_.x + _ARG_3_.x, GetComponentValue(_ARG_1_.instance, "y") + _ARG_3_.y + _ARG_3_.y)
    end
  end,
  Move = function(_ARG_0_, _ARG_1_, _ARG_2_)
    _ARG_0_.hasCachedCentroid = 0
    if _ARG_1_ == nil or _ARG_2_ == nil then
      DebugPrint("hit breakpoint - (newX == nil or newY = nil)")
      dbgBreak()
      return
    end
    for _FORV_10_, _FORV_11_ in pairs(_ARG_0_.contents) do
      if type(_FORV_11_) == "table" then
        if _FORV_11_.QueryComponentType ~= nil and _FORV_11_:QueryComponentType() == "UIContainer" then
        elseif _FORV_11_.instance ~= nil then
        end
        _FORV_11_.localX = GetComponentValue(_FORV_11_.instance, "x") - _ARG_0_:GetCentroid()
        _FORV_11_.localY = GetComponentValue(_FORV_11_.instance, "y") - _ARG_0_:GetCentroid()
      end
    end
    for _FORV_10_, _FORV_11_ in pairs(_ARG_0_.contents) do
      if type(_FORV_11_) == "table" then
        if _FORV_11_.instance ~= nil then
          SetComponentValue(_FORV_11_.instance, "x", _ARG_1_ + _FORV_11_.localX)
          SetComponentValue(_FORV_11_.instance, "y", _ARG_2_ + _FORV_11_.localY)
        elseif _FORV_11_.Move ~= nil then
          _FORV_11_:Move(_ARG_1_ + _FORV_11_.localX, _ARG_2_ + _FORV_11_.localY)
        end
      end
    end
  end
}
