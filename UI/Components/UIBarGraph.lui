BAR_JUST_LEFT = 1
BAR_JUST_RIGHT = 2
function MakeUIBarGraph(_ARG_0_, _ARG_1_, _ARG_2_, _ARG_3_, _ARG_4_)
  if _ARG_1_ ~= nil and type(_ARG_1_) == "table" then
    _ARG_1_.bargraph_owner = _ARG_0_
    _ARG_1_.bargraph_name = _ARG_2_
    _ARG_1_.bargraph_slider = _ARG_3_
    _ARG_1_.bargraph_justification = _ARG_4_ or BAR_JUST_LEFT
    _ARG_1_.animDimensions = {x = 0, y = 0}
    _ARG_1_.animPosition = {x = 0, y = 0}
    function _ARG_1_.SetBarPercent(_ARG_0_, _ARG_1_)
      _ARG_0_.animDimensions.x, _ARG_0_.animDimensions.y = GetComponentAnimationDimensions(_ARG_0_.bargraph_owner.instance, _ARG_0_.bargraph_name .. ".Background.icon1")
      _ARG_0_.animPosition.x, _ARG_0_.animPosition.y = GetComponentAnimationPosition(_ARG_0_.bargraph_owner.instance, _ARG_0_.bargraph_name .. ".Background.icon1")
      if _ARG_0_.bargraph_justification == BAR_JUST_LEFT then
        _ARG_0_.Blackbar.icon1:SetDimensions(_ARG_0_.animDimensions.x * (1 - _ARG_1_), _ARG_0_.animDimensions.y)
        _ARG_0_.Blackbar.icon1:SetPosition(_ARG_0_.animPosition.x + _ARG_0_.animDimensions.x * _ARG_1_ / 2, _ARG_0_.animPosition.y)
        if _ARG_0_.Slider ~= nil then
          _ARG_0_.Slider:Move(_ARG_0_.animPosition.x + (_ARG_0_.animDimensions.x * _ARG_1_ - _ARG_0_.animDimensions.x / 2), _ARG_0_.animPosition.y)
        elseif _ARG_0_.bargraph_slider ~= nil and _ARG_0_.bargraph_slider.Move ~= nil then
          _ARG_0_.bargraph_slider:Move(_ARG_0_.animPosition.x + (_ARG_0_.animDimensions.x * _ARG_1_ - _ARG_0_.animDimensions.x / 2), _ARG_0_.animPosition.y)
        end
      else
        DebugPrint("yarrrr no bargraph justify yet")
      end
    end
  else
    DebugPrint("MakeUIBarGraph called on a nil element: " .. _ARG_2_)
  end
end
